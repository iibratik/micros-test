{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"some\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_flex = _resolveComponent(\"v-flex\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_v_flex, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, {\n      class: \"justify-center\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"3\",\n        class: \"surface\"\n      }, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"6\"\n      })]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_createVNode","_component_v_flex","_component_v_row","class","_component_v_col","cols","_hoisted_1"],"sources":["/Users/ibratibragimov/D-disk/working/micros-test/src/views/Lists/WorkersList.vue"],"sourcesContent":["<template>\n  <div>\n    <v-flex>\n        <v-row class=\"justify-center\">\n    <v-col cols=\"3\" class=\"surface\">\n        <h1>some</h1>\n    </v-col>\n    <v-col cols=\"6\">\n        \n    </v-col>\n        </v-row>\n    </v-flex>\n  </div>\n</template>\n\n<script>\nexport default {\n  computed: {\n    workers() {\n      return this.$store.getters.getWorkers\n    },\n  },\n  created() {\n    this.$store.dispatch('fetchWorkers') // Запускаем действие для получения списка работников с сервера\n  },\n}\n</script>\n    <!-- <ul>\n      <li v-for=\"worker in workers\" :key=\"worker.id\">\n        <router-link :to=\"'/worker/' + worker.id\" :worker=\"worker\"\n          >{{ worker.firstName }} {{ worker.lastName }}</router-link\n        >\n      </li>\n    </ul> -->"],"mappings":";gCAKQA,mBAAA,CAAa,YAAT,MAAI;;;;;;uBAJdC,mBAAA,CAWM,cAVJC,YAAA,CASSC,iBAAA;sBARL,MAOQ,CAPRD,YAAA,CAOQE,gBAAA;MAPDC,KAAK,EAAC;IAAgB;wBACjC,MAEQ,CAFRH,YAAA,CAEQI,gBAAA;QAFDC,IAAI,EAAC,GAAG;QAACF,KAAK,EAAC;;0BAClB,MAAa,CAAbG,UAAa,C;;UAEjBN,YAAA,CAEQI,gBAAA;QAFDC,IAAI,EAAC;MAAG,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}