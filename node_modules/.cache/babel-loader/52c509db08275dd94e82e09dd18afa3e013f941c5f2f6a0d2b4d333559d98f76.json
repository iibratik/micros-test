{"ast":null,"code":"import Table from \"@/components/Table.vue\";\nexport default {\n  components: {\n    Table\n  },\n  data() {\n    return {\n      search: '',\n      headers: [{\n        align: 'start',\n        key: 'name',\n        sortable: false,\n        title: 'Dessert (100g serving)'\n      }, {\n        key: 'calories',\n        title: 'Calories'\n      }, {\n        key: 'fat',\n        title: 'Fat (g)'\n      }, {\n        key: 'carbs',\n        title: 'Carbs (g)'\n      }, {\n        key: 'protein',\n        title: 'Protein (g)'\n      }, {\n        key: 'iron',\n        title: 'Iron (%)'\n      }],\n      desserts: [{\n        name: 'Frozen Yogurt',\n        calories: 159,\n        fat: 6.0,\n        carbs: 24,\n        protein: 4.0,\n        iron: 1\n      }, {\n        name: 'Ice cream sandwich',\n        calories: 237,\n        fat: 9.0,\n        carbs: 37,\n        protein: 4.3,\n        iron: 1\n      }, {\n        name: 'Eclair',\n        calories: 262,\n        fat: 16.0,\n        carbs: 23,\n        protein: 6.0,\n        iron: 7\n      }, {\n        name: 'Cupcake',\n        calories: 305,\n        fat: 3.7,\n        carbs: 67,\n        protein: 4.3,\n        iron: 8\n      }, {\n        name: 'Gingerbread',\n        calories: 356,\n        fat: 16.0,\n        carbs: 49,\n        protein: 3.9,\n        iron: 16\n      }, {\n        name: 'Jelly bean',\n        calories: 375,\n        fat: 0.0,\n        carbs: 94,\n        protein: 0.0,\n        iron: 0\n      }, {\n        name: 'Lollipop',\n        calories: 392,\n        fat: 0.2,\n        carbs: 98,\n        protein: 0,\n        iron: 2\n      }, {\n        name: 'Honeycomb',\n        calories: 408,\n        fat: 3.2,\n        carbs: 87,\n        protein: 6.5,\n        iron: 45\n      }, {\n        name: 'Donut',\n        calories: 452,\n        fat: 25.0,\n        carbs: 51,\n        protein: 4.9,\n        iron: 22\n      }, {\n        name: 'KitKat',\n        calories: 518,\n        fat: 26.0,\n        carbs: 65,\n        protein: 7,\n        iron: 6\n      }]\n    };\n  },\n  computed: {\n    workers() {\n      return this.$store.getters.getWorkers;\n    }\n  },\n  created() {\n    this.$store.dispatch('fetchWorkers'); // Запускаем действие для получения списка работников с сервера\n  }\n};","map":{"version":3,"names":["Table","components","data","search","headers","align","key","sortable","title","desserts","name","calories","fat","carbs","protein","iron","computed","workers","$store","getters","getWorkers","created","dispatch"],"sources":["/Users/ibratibragimov/D-disk/working/micros-test/src/views/Lists/WorkersList.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row class=\"justify-center\">\n      <v-col cols=\"3\" class=\"surface\">\n        <h1>some</h1>\n      </v-col>\n      <v-col theme=\"surface\" cols=\"6\">\n        <Table :headers=\"headers\" :items=\"workers\" :search=\"search\"></Table>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport Table from \"@/components/Table.vue\"\nexport default {\n  components:{Table},\n  data(){\n    return{\n      search: '',\n      headers: [\n          {\n            align: 'start',\n            key: 'name',\n            sortable: false,\n            title: 'Dessert (100g serving)',\n          },\n          { key: 'calories', title: 'Calories' },\n          { key: 'fat', title: 'Fat (g)' },\n          { key: 'carbs', title: 'Carbs (g)' },\n          { key: 'protein', title: 'Protein (g)' },\n          { key: 'iron', title: 'Iron (%)' },\n        ],\n        desserts: [\n          {\n            name: 'Frozen Yogurt',\n            calories: 159,\n            fat: 6.0,\n            carbs: 24,\n            protein: 4.0,\n            iron: 1,\n          },\n          {\n            name: 'Ice cream sandwich',\n            calories: 237,\n            fat: 9.0,\n            carbs: 37,\n            protein: 4.3,\n            iron: 1,\n          },\n          {\n            name: 'Eclair',\n            calories: 262,\n            fat: 16.0,\n            carbs: 23,\n            protein: 6.0,\n            iron: 7,\n          },\n          {\n            name: 'Cupcake',\n            calories: 305,\n            fat: 3.7,\n            carbs: 67,\n            protein: 4.3,\n            iron: 8,\n          },\n          {\n            name: 'Gingerbread',\n            calories: 356,\n            fat: 16.0,\n            carbs: 49,\n            protein: 3.9,\n            iron: 16,\n          },\n          {\n            name: 'Jelly bean',\n            calories: 375,\n            fat: 0.0,\n            carbs: 94,\n            protein: 0.0,\n            iron: 0,\n          },\n          {\n            name: 'Lollipop',\n            calories: 392,\n            fat: 0.2,\n            carbs: 98,\n            protein: 0,\n            iron: 2,\n          },\n          {\n            name: 'Honeycomb',\n            calories: 408,\n            fat: 3.2,\n            carbs: 87,\n            protein: 6.5,\n            iron: 45,\n          },\n          {\n            name: 'Donut',\n            calories: 452,\n            fat: 25.0,\n            carbs: 51,\n            protein: 4.9,\n            iron: 22,\n          },\n          {\n            name: 'KitKat',\n            calories: 518,\n            fat: 26.0,\n            carbs: 65,\n            protein: 7,\n            iron: 6,\n          },\n        ]}\n  },\n  computed: {\n    workers() {\n      return this.$store.getters.getWorkers\n    },\n  },\n  created() {\n    this.$store.dispatch('fetchWorkers') // Запускаем действие для получения списка работников с сервера\n  },\n}\n</script>\n<!-- <ul>\n      <li v-for=\"worker in workers\" :key=\"worker.id\">\n        <router-link :to=\"'/worker/' + worker.id\" :worker=\"worker\"\n          >{{ worker.firstName }} {{ worker.lastName }}</router-link\n        >\n      </li>\n    </ul> -->\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}