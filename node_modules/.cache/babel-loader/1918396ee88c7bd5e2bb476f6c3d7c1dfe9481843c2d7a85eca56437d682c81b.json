{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  class: \"worker-lists\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"worker-info\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_3];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Документы, принадлежащие рабочему:\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  return $options.worker ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_v_card, null, {\n    default: _withCtx(() => [_createVNode(_component_v_card_title, {\n      class: \"font-weight-bold\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.worker.firstName) + \" \" + _toDisplayString($options.worker.lastName), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_card_text, null, {\n      default: _withCtx(() => [_createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.workerData, item => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          class: \"worker-list\",\n          key: item\n        }, _hoisted_4);\n      }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"p\", null, \": \" + _toDisplayString($options.worker.dateOfBirth), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Серия паспорта: \" + _toDisplayString($options.worker.passportSeries), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Пол: \" + _toDisplayString($options.worker.gender), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Активен: \" + _toDisplayString($options.worker.isActive ? 'Да' : 'Нет'), 1 /* TEXT */), _hoisted_5, $options.workerDocuments && $options.workerDocuments.length > 0 ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.workerDocuments, document => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: document.id\n        }, _toDisplayString(document.typeOfDocument) + \" - \" + _toDisplayString(document.documentNumber), 1 /* TEXT */);\n      }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"Нет документов для этого рабочего.\"))]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createCommentVNode(\" Можно добавить загрузку или другое сообщение, пока данные загружаются \"), _createTextVNode(\" Загрузка... \")]));\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_3","$options","worker","_createElementBlock","_hoisted_1","_createVNode","_component_v_card","_component_v_card_title","firstName","_toDisplayString","lastName","_component_v_card_text","_hoisted_2","_Fragment","_renderList","$data","workerData","item","key","dateOfBirth","passportSeries","gender","isActive","_hoisted_5","workerDocuments","length","_hoisted_6","document","id","typeOfDocument","documentNumber","_hoisted_7","_hoisted_8","_createCommentVNode"],"sources":["/Users/ibratibragimov/D-disk/working/micros-test/src/views/Details/WorkerDetails.vue"],"sourcesContent":["<template>\n  <div v-if=\"worker\">\n    <v-card>\n      <v-card-title class=\"font-weight-bold\">\n        {{ worker.firstName }} {{ worker.lastName }}\n      </v-card-title>\n      <v-card-text>\n        <ul class=\"worker-lists\">\n          <li class=\"worker-list\" v-for=\"item in workerData\" :key=\"item\">\n             <span class=\"worker-info\"></span>\n          </li>\n        </ul>\n        <p>: {{ worker.dateOfBirth }}</p>\n        <p>Серия паспорта: {{ worker.passportSeries }}</p>\n        <p>Пол: {{ worker.gender }}</p>\n        <p>Активен: {{ worker.isActive ? 'Да' : 'Нет' }}</p>\n\n        <h3>Документы, принадлежащие рабочему:</h3>\n        <ul v-if=\"workerDocuments && workerDocuments.length > 0\">\n          <li v-for=\"document in workerDocuments\" :key=\"document.id\">\n            {{ document.typeOfDocument }} - {{ document.documentNumber }}\n          </li>\n        </ul>\n        <p v-else>Нет документов для этого рабочего.</p>\n      </v-card-text>\n    </v-card>\n  </div>\n  <div v-else>\n    <!-- Можно добавить загрузку или другое сообщение, пока данные загружаются -->\n    Загрузка...\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      workerData:[\n        {\n          title:'Дата рождения',\n          data:worker.dateOfBirth,\n        }\n      ]\n    }\n  },\n  computed: {\n    worker() {\n      const workerId = parseInt(this.$route.params.id)\n      return this.$store.getters.getWorkerById(workerId)\n    },\n    workerDocuments() {\n      if (!this.worker) return null\n      const workerId = parseInt(this.$route.params.id)\n      return this.$store.getters.getDocuments.filter(\n        (document) =>\n          document.belongTo ===\n          `${this.worker.firstName} ${this.worker.lastName}`\n      )\n    },\n  },\n  methods: {\n    // Метод для получения документа по его id\n    getDocumentById(id) {\n      return this.$store.getters.getDocumentById(id)\n    },\n  },\n  async created() {\n    // Получаем документы и рабочих при загрузке страницы\n    await this.$store.dispatch('fetchDocuments')\n    await this.$store.dispatch('fetchWorkers')\n  },\n}\n</script>\n"],"mappings":";;;;;EAOYA,KAAK,EAAC;AAAc;gCAEnBC,mBAAA,CAAiC;EAA3BD,KAAK,EAAC;AAAa;oBAAzBE,UAAiC,C;gCAQtCD,mBAAA,CAA2C,YAAvC,oCAAkC;;;;;;;;;;;;;;SAhBjCE,QAAA,CAAAC,MAAM,I,cAAjBC,mBAAA,CAyBM,OAAAC,UAAA,GAxBJC,YAAA,CAuBSC,iBAAA;sBAtBP,MAEe,CAFfD,YAAA,CAEeE,uBAAA;MAFDT,KAAK,EAAC;IAAkB;wBACpC,MAAsB,C,kCAAnBG,QAAA,CAAAC,MAAM,CAACM,SAAS,IAAG,GAAC,GAAAC,gBAAA,CAAGR,QAAA,CAAAC,MAAM,CAACQ,QAAQ,iB;;;QAE3CL,YAAA,CAkBcM,sBAAA;wBAjBZ,MAIK,CAJLZ,mBAAA,CAIK,MAJLa,UAIK,I,kBAHHT,mBAAA,CAEKU,SAAA,QAAAC,WAAA,CAFkCC,KAAA,CAAAC,UAAU,EAAlBC,IAAI;6BAAnCd,mBAAA,CAEK;UAFDL,KAAK,EAAC,aAAa;UAA6BoB,GAAG,EAAED;;wCAI3DlB,mBAAA,CAAiC,WAA9B,IAAE,GAAAU,gBAAA,CAAGR,QAAA,CAAAC,MAAM,CAACiB,WAAW,kBAC1BpB,mBAAA,CAAkD,WAA/C,kBAAgB,GAAAU,gBAAA,CAAGR,QAAA,CAAAC,MAAM,CAACkB,cAAc,kBAC3CrB,mBAAA,CAA+B,WAA5B,OAAK,GAAAU,gBAAA,CAAGR,QAAA,CAAAC,MAAM,CAACmB,MAAM,kBACxBtB,mBAAA,CAAoD,WAAjD,WAAS,GAAAU,gBAAA,CAAGR,QAAA,CAAAC,MAAM,CAACoB,QAAQ,iCAE9BC,UAA2C,EACjCtB,QAAA,CAAAuB,eAAe,IAAIvB,QAAA,CAAAuB,eAAe,CAACC,MAAM,Q,cAAnDtB,mBAAA,CAIK,MAAAuB,UAAA,I,kBAHHvB,mBAAA,CAEKU,SAAA,QAAAC,WAAA,CAFkBb,QAAA,CAAAuB,eAAe,EAA3BG,QAAQ;6BAAnBxB,mBAAA,CAEK;UAFoCe,GAAG,EAAES,QAAQ,CAACC;4BAClDD,QAAQ,CAACE,cAAc,IAAG,KAAG,GAAApB,gBAAA,CAAGkB,QAAQ,CAACG,cAAc;yDAG9D3B,mBAAA,CAAgD,KAAA4B,UAAA,EAAtC,oCAAkC,G;;;;;yBAIlD5B,mBAAA,CAGM,OAAA6B,UAAA,GAFJC,mBAAA,2EAA8E,E,iBAAA,eAEhF,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}