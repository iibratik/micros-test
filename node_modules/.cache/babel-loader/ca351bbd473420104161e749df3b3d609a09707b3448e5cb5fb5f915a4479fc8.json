{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Список работников\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.workers, worker => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: worker.id\n    }, [_createVNode(_component_router_link, {\n      to: '/worker/' + worker.id\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(worker.firstName) + \" \" + _toDisplayString(worker.lastName), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$options","workers","worker","key","id","_createVNode","_component_router_link","to","firstName","_toDisplayString","lastName"],"sources":["/Users/ibratibragimov/D-disk/working/micros-test/src/components/Lists/WorkersList.vue"],"sourcesContent":["<!-- WorkersList.vue -->\n\n<template>\n    <div>\n      <h2>Список работников</h2>\n      <ul>\n        <li v-for=\"worker in workers\" :key=\"worker.id\">\n          <router-link :to=\"'/worker/' + worker.id\">{{ worker.firstName }} {{ worker.lastName }}</router-link>\n        </li>\n      </ul>\n    </div>\n  </template>\n\n  <script>\n  export default {\n    computed: {\n      workers() {\n        return this.$store.getters.getWorkers;\n      },\n    },\n    created() {\n      this.$store.dispatch('fetchWorkers'); // Запускаем действие для получения списка работников с сервера\n    },\n  };\n  </script>"],"mappings":";gCAIMA,mBAAA,CAA0B,YAAtB,mBAAiB;;;;uBADvBC,mBAAA,CAOM,cANJC,UAA0B,EAC1BF,mBAAA,CAIK,c,kBAHHC,mBAAA,CAEKE,SAAA,QAAAC,WAAA,CAFgBC,QAAA,CAAAC,OAAO,EAAjBC,MAAM;yBAAjBN,mBAAA,CAEK;MAF0BO,GAAG,EAAED,MAAM,CAACE;QACzCC,YAAA,CAAoGC,sBAAA;MAAtFC,EAAE,eAAeL,MAAM,CAACE;;wBAAI,MAAsB,C,kCAAnBF,MAAM,CAACM,SAAS,IAAG,GAAC,GAAAC,gBAAA,CAAGP,MAAM,CAACQ,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}