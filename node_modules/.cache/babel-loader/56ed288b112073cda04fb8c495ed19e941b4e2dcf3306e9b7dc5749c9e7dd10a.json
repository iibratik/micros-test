{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex justify-center\"\n};\nconst _hoisted_2 = {\n  class: \"worker-lists\"\n};\nconst _hoisted_3 = {\n  class: \"worker-info-title\"\n};\nconst _hoisted_4 = {\n  class: \"worker-list\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"worker-info-title\"\n}, \"Активность: \", -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_DataTable = _resolveComponent(\"DataTable\");\n  const _component_v_card_subtitle = _resolveComponent(\"v-card-subtitle\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$options.worker ? (_openBlock(), _createBlock(_component_v_card, {\n    key: 0,\n    class: \"v-col-10 justify-center\",\n    style: {\n      \"margin-bottom\": \"50px\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card_title, {\n      class: \"font-weight-bold\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.worker.firstName) + \" \" + _toDisplayString($options.worker.lastName), 1)]),\n      _: 1\n    }), _createVNode(_component_v_card_text, null, {\n      default: _withCtx(() => [_createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.workerData, item => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          class: \"worker-list\",\n          key: item.title\n        }, [_createElementVNode(\"span\", _hoisted_3, [_createTextVNode(_toDisplayString(item.title) + \": \", 1), _createElementVNode(\"span\", null, _toDisplayString(item.data), 1)])]);\n      }), 128)), _createElementVNode(\"li\", _hoisted_4, [_hoisted_5, $options.worker.isActive ? (_openBlock(), _createBlock(_component_v_icon, {\n        key: 0,\n        size: \"large\",\n        color: \"primary\",\n        icon: \"mdi-checkbox-marked\"\n      })) : _createCommentVNode(\"\", true), !$options.worker.isActive ? (_openBlock(), _createBlock(_component_v_icon, {\n        key: 1,\n        size: \"large\",\n        color: \"primary\",\n        icon: \"mdi-alpha-x-box\"\n      })) : _createCommentVNode(\"\", true)])]), $options.workerDocuments && $options.workerDocuments.length > 0 ? (_openBlock(), _createBlock(_component_DataTable, {\n        key: 0,\n        title: `Документы, принадлежащие рабочему:`,\n        items: $options.workerDocuments,\n        headers: $data.documentHeader,\n        link: `document`\n      }, null, 8, [\"items\", \"headers\"])) : (_openBlock(), _createBlock(_component_v_card_subtitle, {\n        key: 1\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Нет документов для этого рабочего.\")]),\n        _: 1\n      }))]),\n      _: 1\n    })]),\n    _: 1\n  })) : (_openBlock(), _createBlock(_component_v_card, {\n    key: 1\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Вернитесь в начало для повторной загрузки данных \")]),\n    _: 1\n  }))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","$options","worker","_createBlock","_component_v_card","style","_createVNode","_component_v_card_title","firstName","_toDisplayString","lastName","_component_v_card_text","_hoisted_2","_Fragment","_renderList","$data","workerData","item","key","title","_hoisted_3","data","_hoisted_4","_hoisted_5","isActive","_component_v_icon","size","color","icon","workerDocuments","length","_component_DataTable","items","headers","documentHeader","link","_component_v_card_subtitle"],"sources":["/Users/ibratibragimov/D-disk/working/micros-test/src/views/Details/WorkerDetails.vue"],"sourcesContent":["<template>\n  <div class=\"d-flex justify-center\" >\n    <v-card class=\"v-col-10 justify-center\" style=\"margin-bottom: 50px;\" v-if=\"worker\">\n      <v-card-title class=\"font-weight-bold\">\n        {{ worker.firstName }} {{ worker.lastName }}\n      </v-card-title>\n      <v-card-text>\n        <ul class=\"worker-lists\">\n          <li class=\"worker-list\" v-for=\"item in workerData\" :key=\"item.title\">\n            <span class=\"worker-info-title\">\n              {{ item.title }}: <span>{{ item.data }}</span>\n            </span>\n          </li>\n          <li class=\"worker-list\">\n            <span class=\"worker-info-title\">Активность: </span>\n            <v-icon\n              v-if=\"worker.isActive\"\n              size=\"large\"\n              color=\"primary\"\n              icon=\"mdi-checkbox-marked\"\n            ></v-icon>\n            <v-icon\n              v-if=\"!worker.isActive\"\n              size=\"large\"\n              color=\"primary\"\n              icon=\"mdi-alpha-x-box\"\n            ></v-icon>\n          </li>\n        </ul>\n        <DataTable\n          :title=\"`Документы, принадлежащие рабочему:`\"\n          :items=\"workerDocuments\"\n          :headers=\"documentHeader\"\n          :link=\"`document`\"\n          v-if=\"workerDocuments && workerDocuments.length > 0\"\n        />\n        <v-card-subtitle v-else>Нет документов для этого рабочего.</v-card-subtitle>\n      </v-card-text>\n    </v-card>\n  <v-card v-else>\n    <!-- Если что-то не загрузится -->\n    Вернитесь в начало для повторной загрузки данных\n  </v-card>\n  </div>\n</template>\n\n<script>\nimport DataTable from '@/components/DataTable.vue'\n\nexport default {\n  components: {\n    DataTable,\n  },\n  data() {\n    return {\n      workerData: [\n        {\n          title: 'Дата рождения',\n          data: '',\n        },\n        {\n          title: 'Серия паспорта',\n          data: '',\n        },\n        {\n          title: 'Пол',\n          data: '',\n        },\n      ],\n      documentHeader: [\n        {\n          align: 'start',\n          sortable: true,\n          key: 'typeOfDocument',\n          title: 'Тип документа',\n        },\n        { key: 'documentNumber', title: 'Номер документа' },\n        { key: 'dateDocument', title: 'Дата создания' },\n        { key: 'belongTo', title: 'Владелец', sortable: false },\n        { key: 'typeDocument', title: 'Тип документа' },\n      ],\n    }\n  },\n  computed: {\n    worker() {\n      const workerId = parseInt(this.$route.params.id)\n      return this.$store.getters.getWorkerById(workerId)\n    },\n    workerDocuments() {\n      if (!this.worker) return null\n      const workerId = parseInt(this.$route.params.id)\n      return this.$store.getters.getDocuments.filter(\n        (document) =>\n          document.belongTo ===\n          `${this.worker.firstName} ${this.worker.lastName}`\n      )\n    },\n  },\n  methods: {\n    // Метод для получения документа по его id\n    getDocumentById(id) {\n      return this.$store.getters.getDocumentById(id)\n    },\n  },\n  async created() {\n    // Получаем документы и рабочих при загрузке страницы\n    await this.$store.dispatch('fetchDocuments')\n    await this.$store.dispatch('fetchWorkers')\n\n    // Обновляем данные рабочего при загрузке страницы\n    this.updateWorkerData()\n  },\n  watch: {\n    worker(newWorker) {\n      if (newWorker) {\n        // Обновляем данные рабочего при каждом изменении worker\n        this.updateWorkerData()\n      }\n    },\n  },\n  methods: {\n    updateWorkerData() {\n      if (this.worker) {\n        this.workerData = [\n          {\n            title: 'Дата рождения',\n            data: this.worker.dateOfBirth,\n          },\n          {\n            title: 'Серия паспорта',\n            data: this.worker.passportSeries,\n          },\n          {\n            title: 'Пол',\n            data: this.worker.gender,\n          },\n        ]\n      }\n    },\n  },\n}\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAuB;;EAMxBA,KAAK,EAAC;AAAc;;EAEdA,KAAK,EAAC;AAAmB;;EAI7BA,KAAK,EAAC;AAAa;gCACrBC,mBAAA,CAAmD;EAA7CD,KAAK,EAAC;AAAmB,GAAC,cAAY;;;;;;;;uBAbtDE,mBAAA,CA0CM,OA1CNC,UA0CM,GAzCuEC,QAAA,CAAAC,MAAM,I,cAAjFC,YAAA,CAoCSC,iBAAA;;IApCDP,KAAK,EAAC,yBAAyB;IAACQ,KAA4B,EAA5B;MAAA;IAAA;;sBACtC,MAEe,CAFfC,YAAA,CAEeC,uBAAA;MAFDV,KAAK,EAAC;IAAkB;wBACpC,MAAsB,C,kCAAnBI,QAAA,CAAAC,MAAM,CAACM,SAAS,IAAG,GAAC,GAAAC,gBAAA,CAAGR,QAAA,CAAAC,MAAM,CAACQ,QAAQ,M;;QAE3CJ,YAAA,CA+BcK,sBAAA;wBA9BZ,MAqBK,CArBLb,mBAAA,CAqBK,MArBLc,UAqBK,I,kBApBHb,mBAAA,CAIKc,SAAA,QAAAC,WAAA,CAJkCC,KAAA,CAAAC,UAAU,EAAlBC,IAAI;6BAAnClB,mBAAA,CAIK;UAJDF,KAAK,EAAC,aAAa;UAA6BqB,GAAG,EAAED,IAAI,CAACE;YAC5DrB,mBAAA,CAEO,QAFPsB,UAEO,G,kCADFH,IAAI,CAACE,KAAK,IAAG,IAAE,MAAArB,mBAAA,CAA4B,cAAAW,gBAAA,CAAnBQ,IAAI,CAACI,IAAI,M;iBAGxCvB,mBAAA,CAcK,MAdLwB,UAcK,GAbHC,UAAmD,EAE3CtB,QAAA,CAAAC,MAAM,CAACsB,QAAQ,I,cADvBrB,YAAA,CAKUsB,iBAAA;;QAHRC,IAAI,EAAC,OAAO;QACZC,KAAK,EAAC,SAAS;QACfC,IAAI,EAAC;4CAGE3B,QAAA,CAAAC,MAAM,CAACsB,QAAQ,I,cADxBrB,YAAA,CAKUsB,iBAAA;;QAHRC,IAAI,EAAC,OAAO;QACZC,KAAK,EAAC,SAAS;QACfC,IAAI,EAAC;+CASH3B,QAAA,CAAA4B,eAAe,IAAI5B,QAAA,CAAA4B,eAAe,CAACC,MAAM,Q,cALjD3B,YAAA,CAME4B,oBAAA;;QALCZ,KAAK,EAAE,oCAAoC;QAC3Ca,KAAK,EAAE/B,QAAA,CAAA4B,eAAe;QACtBI,OAAO,EAAElB,KAAA,CAAAmB,cAAc;QACvBC,IAAI,EAAE;0DAGThC,YAAA,CAA4EiC,0BAAA;QAAAlB,GAAA;MAAA;0BAApD,MAAkC,C,iBAAlC,oCAAkC,E;;;;;;uBAGhEf,YAAA,CAGSC,iBAAA;IAAAc,GAAA;EAAA;sBAF2B,MAEpC,C,iBAFoC,oDAEpC,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}