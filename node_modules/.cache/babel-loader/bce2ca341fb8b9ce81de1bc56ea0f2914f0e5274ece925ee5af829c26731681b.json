{"ast":null,"code":"export default {\n  computed: {\n    worker() {\n      const workerId = parseInt(this.$route.params.id);\n      return this.$store.getters.getWorkerById(workerId);\n    },\n    workerDocuments() {\n      const workerId = parseInt(this.$route.params.id);\n      return this.$store.getters.getDocuments.filter(document => document.belongTo === this.worker.firstName);\n    }\n  },\n  methods: {\n    // Метод для получения документа по его id\n    getDocumentById(id) {\n      return this.$store.getters.getDocumentById(id);\n    }\n  },\n  async created() {\n    // Получаем документы и рабочих при загрузке страницы\n    await this.$store.dispatch(\"fetchDocuments\");\n    await this.$store.dispatch(\"fetchWorkers\");\n  }\n};","map":{"version":3,"names":["computed","worker","workerId","parseInt","$route","params","id","$store","getters","getWorkerById","workerDocuments","getDocuments","filter","document","belongTo","firstName","methods","getDocumentById","created","dispatch"],"sources":["/Users/ibratibragimov/D-disk/working/micros-test/src/views/Details/WorkerDetails.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>{{ worker.firstName }} {{ worker.lastName }}</h2>\n    <p>Дата рождения: {{ worker.dateOfBirth }}</p>\n    <p>Серия паспорта: {{ worker.passportSeries }}</p>\n    <p>Пол: {{ worker.gender }}</p>\n    <p>Активен: {{ worker.isActive ? 'Да' : 'Нет' }}</p>\n\n    <h3>Документы, принадлежащие рабочему:</h3>\n    <ul v-if=\"workerDocuments.length > 0\">\n      <li v-for=\"document in workerDocuments\" :key=\"document.id\">\n        {{ document.typeOfDocument }} - {{ document.documentNumber }}\n      </li>\n    </ul>\n    <p v-else>Нет документов для этого рабочего.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  computed: {\n    worker() {\n      const workerId = parseInt(this.$route.params.id);\n      return this.$store.getters.getWorkerById(workerId);\n    },\n    workerDocuments() {\n      const workerId = parseInt(this.$route.params.id);\n      return this.$store.getters.getDocuments.filter(\n        (document) => document.belongTo === this.worker.firstName\n      );\n    },\n  },\n  methods: {\n    // Метод для получения документа по его id\n    getDocumentById(id) {\n      return this.$store.getters.getDocumentById(id);\n    },\n  },\n  async created() {\n    // Получаем документы и рабочих при загрузке страницы\n    await this.$store.dispatch(\"fetchDocuments\");\n    await this.$store.dispatch(\"fetchWorkers\");\n  },\n};\n</script>\n"],"mappings":"AAmBA,eAAe;EACbA,QAAQ,EAAE;IACRC,MAAMA,CAAA,EAAG;MACP,MAAMC,QAAO,GAAIC,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;MAChD,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,aAAa,CAACP,QAAQ,CAAC;IACpD,CAAC;IACDQ,eAAeA,CAAA,EAAG;MAChB,MAAMR,QAAO,GAAIC,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;MAChD,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACG,YAAY,CAACC,MAAM,CAC3CC,QAAQ,IAAKA,QAAQ,CAACC,QAAO,KAAM,IAAI,CAACb,MAAM,CAACc,SAClD,CAAC;IACH;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,eAAeA,CAACX,EAAE,EAAE;MAClB,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACS,eAAe,CAACX,EAAE,CAAC;IAChD;EACF,CAAC;EACD,MAAMY,OAAOA,CAAA,EAAG;IACd;IACA,MAAM,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,gBAAgB,CAAC;IAC5C,MAAM,IAAI,CAACZ,MAAM,CAACY,QAAQ,CAAC,cAAc,CAAC;EAC5C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}