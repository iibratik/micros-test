{"ast":null,"code":"// store.js (или store/index.js)\n\nexport default new Vuex.Store({\n  state: {\n    documents: [],\n    // Массив с документами\n    workers: [] // Массив с работниками\n  },\n\n  mutations: {\n    setDocuments(state, documents) {\n      state.documents = documents;\n    },\n    setWorkers(state, workers) {\n      state.workers = workers;\n    }\n  },\n  actions: {\n    // Получение списка документов\n    async fetchDocuments({\n      commit\n    }) {\n      const response = await fetch('http://localhost:3000/documents');\n      const data = await response.json();\n      commit('setDocuments', data);\n    },\n    // Получение списка рабочих\n    async fetchWorkers({\n      commit\n    }) {\n      const response = await fetch('http://localhost:3000/workers');\n      const data = await response.json();\n      commit('setWorkers', data);\n    }\n  },\n  getters: {\n    getDocuments(state) {\n      return state.documents;\n    },\n    getWorkers(state) {\n      return state.workers;\n    },\n    // Получение работника по id\n    getWorkerById: state => id => {\n      return state.workers.find(worker => worker.id === id);\n    },\n    // Получение документа по id\n    getDocumentById: state => id => {\n      return state.documents.find(document => document.id === id);\n    }\n  }\n});","map":{"version":3,"names":["Vuex","Store","state","documents","workers","mutations","setDocuments","setWorkers","actions","fetchDocuments","commit","response","fetch","data","json","fetchWorkers","getters","getDocuments","getWorkers","getWorkerById","id","find","worker","getDocumentById","document"],"sources":["/Users/ibratibragimov/D-disk/working/micros-test/src/store/index.js"],"sourcesContent":["// store.js (или store/index.js)\n\nexport default new Vuex.Store({\n  state: {\n    documents: [], // Массив с документами\n    workers: [], // Массив с работниками\n  },\n  mutations: {\n    setDocuments(state, documents) {\n      state.documents = documents;\n    },\n    setWorkers(state, workers) {\n      state.workers = workers;\n    },\n  },\n  actions: {\n    // Получение списка документов\n    async fetchDocuments({ commit }) {\n      const response = await fetch('http://localhost:3000/documents');\n      const data = await response.json();\n      commit('setDocuments', data);\n    },\n    // Получение списка рабочих\n    async fetchWorkers({ commit }) {\n      const response = await fetch('http://localhost:3000/workers');\n      const data = await response.json();\n      commit('setWorkers', data);\n    },\n  },\n  getters: {\n    getDocuments(state) {\n      return state.documents;\n    },\n    getWorkers(state) {\n      return state.workers;\n    },\n    // Получение работника по id\n    getWorkerById: (state) => (id) => {\n      return state.workers.find((worker) => worker.id === id);\n    },\n    // Получение документа по id\n    getDocumentById: (state) => (id) => {\n      return state.documents.find((document) => document.id === id);\n    },\n  },\n});\n"],"mappings":"AAAA;;AAEA,eAAe,IAAIA,IAAI,CAACC,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,SAAS,EAAE,EAAE;IAAE;IACfC,OAAO,EAAE,EAAE,CAAE;EACf,CAAC;;EACDC,SAAS,EAAE;IACTC,YAAYA,CAACJ,KAAK,EAAEC,SAAS,EAAE;MAC7BD,KAAK,CAACC,SAAS,GAAGA,SAAS;IAC7B,CAAC;IACDI,UAAUA,CAACL,KAAK,EAAEE,OAAO,EAAE;MACzBF,KAAK,CAACE,OAAO,GAAGA,OAAO;IACzB;EACF,CAAC;EACDI,OAAO,EAAE;IACP;IACA,MAAMC,cAAcA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAC/D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCJ,MAAM,CAAC,cAAc,EAAEG,IAAI,CAAC;IAC9B,CAAC;IACD;IACA,MAAME,YAAYA,CAAC;MAAEL;IAAO,CAAC,EAAE;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;MAC7D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCJ,MAAM,CAAC,YAAY,EAAEG,IAAI,CAAC;IAC5B;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,YAAYA,CAACf,KAAK,EAAE;MAClB,OAAOA,KAAK,CAACC,SAAS;IACxB,CAAC;IACDe,UAAUA,CAAChB,KAAK,EAAE;MAChB,OAAOA,KAAK,CAACE,OAAO;IACtB,CAAC;IACD;IACAe,aAAa,EAAGjB,KAAK,IAAMkB,EAAE,IAAK;MAChC,OAAOlB,KAAK,CAACE,OAAO,CAACiB,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACF,EAAE,KAAKA,EAAE,CAAC;IACzD,CAAC;IACD;IACAG,eAAe,EAAGrB,KAAK,IAAMkB,EAAE,IAAK;MAClC,OAAOlB,KAAK,CAACC,SAAS,CAACkB,IAAI,CAAEG,QAAQ,IAAKA,QAAQ,CAACJ,EAAE,KAAKA,EAAE,CAAC;IAC/D;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}